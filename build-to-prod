#!/bin/bash
set -euo pipefail

PKG_NAME="bashrc-script-custom"
PKG_ARCH="all"
BUILD_DIR="$(pwd)/${PKG_NAME}_build"
OUTPUT_DIR="$(pwd)"
REPO_DIR="$(pwd)/../moon-apt-repo/pool/main/b/${PKG_NAME}"
REPO_GIT_DIR="$(pwd)/../moon-apt-repo"
VERSION_FILE="VERSION"

# --- Lecture et incr√©mentation automatique de version ---
if [ -f "$VERSION_FILE" ]; then
    PKG_VERSION=$(<"$VERSION_FILE")
    # Incr√©mentation mineure
    IFS='.' read -r MAJOR MINOR PATCH <<< "$PKG_VERSION"
    PATCH=$((PATCH + 1))
    PKG_VERSION="$MAJOR.$MINOR.$PATCH"
else
    PKG_VERSION="1.1.6"
fi
echo "$PKG_VERSION" > "$VERSION_FILE"
echo "[INFO] Version du build : $PKG_VERSION"

# --- V√©rifications ---
command -v dpkg-deb >/dev/null 2>&1 || { echo "[‚ùå] dpkg-deb n'est pas install√© !"; exit 1; }
command -v git >/dev/null 2>&1 || { echo "[‚ùå] git n'est pas install√© !"; exit 1; }

# --- Build ---
echo "[INFO] Nettoyage de l'ancien dossier de build..."
rm -rf "$BUILD_DIR"
mkdir -p "$BUILD_DIR/DEBIAN" "$BUILD_DIR/usr/local/bin" "$BUILD_DIR/etc/${PKG_NAME}"

echo "[INFO] Copie des scripts..."
cp -r scripts/* "$BUILD_DIR/etc/${PKG_NAME}/"

echo "[INFO] Copie des fichiers DEBIAN..."
cp DEBIAN/control "$BUILD_DIR/DEBIAN/"
[ -f DEBIAN/postinst ] && cp DEBIAN/postinst "$BUILD_DIR/DEBIAN/"
[ -f DEBIAN/prerm ] && cp DEBIAN/prerm "$BUILD_DIR/DEBIAN/"

grep -q "Version:" "$BUILD_DIR/DEBIAN/control" || echo "Version: ${PKG_VERSION}" >> "$BUILD_DIR/DEBIAN/control"
grep -q "Architecture:" "$BUILD_DIR/DEBIAN/control" || echo "Architecture: ${PKG_ARCH}" >> "$BUILD_DIR/DEBIAN/control"

echo "[INFO] Construction du paquet .deb..."
dpkg-deb -b "$BUILD_DIR" "${OUTPUT_DIR}/${PKG_NAME}_${PKG_VERSION}_${PKG_ARCH}.deb"
echo "[‚úÖ] Paquet construit : ${OUTPUT_DIR}/${PKG_NAME}_${PKG_VERSION}_${PKG_ARCH}.deb"

# --- D√©p√¥t APT ---
if [ -d "$REPO_DIR" ]; then
    echo "[INFO] D√©placement du paquet dans le d√©p√¥t APT..."
    mv -f "${OUTPUT_DIR}/${PKG_NAME}_${PKG_VERSION}_${PKG_ARCH}.deb" "$REPO_DIR/" || echo "[‚ö†Ô∏è] Impossible de d√©placer le paquet"

    if [ -x "$REPO_GIT_DIR/update-pkg" ]; then
        echo "[INFO] Mise √† jour du d√©p√¥t APT..."
        (cd "$REPO_GIT_DIR" && ./update-pkg) || echo "[‚ö†Ô∏è] √âchec de update-pkg"
    else
        echo "[‚ö†Ô∏è] update-pkg introuvable ou non ex√©cutable dans $REPO_GIT_DIR"
    fi

    # --- Git commit/push/tag ---
    cd "$REPO_GIT_DIR"
    git add . || echo "[‚ö†Ô∏è] git add a √©chou√©"
    git commit -m "Build v${PKG_VERSION}" || echo "[‚ö†Ô∏è] git commit a √©chou√© (peut-√™tre rien √† committer)"
    git push || echo "[‚ö†Ô∏è] git push a √©chou√©"

    # Tag automatique
    git tag -f "v${PKG_VERSION}" || echo "[‚ö†Ô∏è] git tag a √©chou√©"
    git push origin "v${PKG_VERSION}" --force || echo "[‚ö†Ô∏è] git push tag a √©chou√©"
fi

echo "[üèÅ] Build termin√© avec succ√®s ! Version : $PKG_VERSION"